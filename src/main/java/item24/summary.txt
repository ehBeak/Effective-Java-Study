멤버 클래스는 되도록 static으로 만들라
[1] 중첩 클래스(nested class)
    static 여부에 따라,
    - 정적 멤버 클래스
        1. 다른 클래스 안에 선언, 바깥 클래스의 private 멤버에도 접근 가능, 다른 정적 멤버와 접근 규칙 동일
        2. 바깥 클래스와 함께 쓰일 때만 유용한 public 도우미 클래스로 쓰인다.
        3. 멤버 클래스에서 바깥 인스턴스에 접근할 일이 없다면 무조건 static을 붙여서 정적 멤버 클래스로 만들자
    - 내부 클래스
        - (비정적) 멤버 클래스:
            1. 바깥 클래스의 인스턴스와 암묵적으로 연결된다.
            2. 비정적 멤버 클래스의 인스턴스 메서드에서 정규화된 this를 사용해 바깥 인스턴스의 메서드를 호출하거나 바깥 인스턴스의 참조를 가져올 수 있다.
            3. 바깥 인스턴스와의 관계는 멤버 클래스가 인스턴스화 될 때 확립, 더이상 변경 불가능
            4. 어댑터를 정의할 때 자주 사용
        - 익명 클래스
        - 지역 클래스

* 개념상, 중첩 클래스의 인스턴스가 바깥 인스턴스와 독립적으로 존재할 수 있다면 정적 멤버 클래스로 만들어야 한다.(비정적 멤버 클래스는 바깥 인스턴스 없이는 생성 불가)


- 중첩 클래스는 자신을 감싼 바깥 클래스에서만 쓰여야 한다.
